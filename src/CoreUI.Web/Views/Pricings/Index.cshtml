@model CoreUI.Web.Models.ViewModel.PricingFormViewModel

@{
  ViewData["Title"] = "Index";
}

<!-- Breadcrumb-->
<div class="container-fluid mt-2">
  <div class="animated fadeIn">
    <div class="row">
      <div class="col-lg-12">
        <div class="card">
          <div class="card-header">
            <i class="fa fa-edit"></i> Aprovação de horas
            <div class="card-header-actions">
              <button class="btn btn-sm btn-ghost-primary" onclick="Modal(`/Pricings/Create`, 'GET')">
                <i class="fa fa-plus"></i>
              </button>
            </div>
          </div>
          <div class="card-body">
            <div class="row ml-0">
              <div class="col-12 mb-3">
                <button class="btn btn-primary collapsed" type="button" data-toggle="collapse" data-target="#DataTables_Table_0_filter" aria-expanded="false" aria-controls="DataTables_Table_0_filter">
                  Filtros
                </button>
              </div>

              <div id="DataTables_Table_0_filter" class="dataTables_filter row col-12 form-group collapse">
                <div class="col-12">
                  <form asp-action="Index">
                    <label>
                      Tipo de precificação:
                      <select name="tipoPrecificacao" id="tipoPrecificacao" asp-items="@(new SelectList(Model.TypePricing, "Id", "Name"))" class="form-control">
                        <option value="">Selecione</option>
                      </select>
                    </label>

                    <label>
                      Clientes:
                      <select name="clients" id="clients" asp-items="@(new SelectList(Model.Clients, "Id", "Name"))" class="form-control">
                        <option value="">Selecione</option>
                      </select>
                    </label>

                    <label>
                      Executivo da conta:
                      <select name="executivoConta" id="executivoConta" asp-items="@(new SelectList(Model.Employees, "Id", "Name"))" class="form-control">
                        <option value="">Selecione</option>
                      </select>
                    </label>

                    <label>
                      Alocação Gerente:
                      <select name="alocacaoGerente" id="alocacaoGerente" asp-items="@(new SelectList(Model.Managers, "Id", "Name"))" class="form-control">
                        <option value="">Selecione</option>
                      </select>
                    </label>

                    <label>
                      Responsável:
                      <select name="responsavel" id="responsavel" asp-items="@(new SelectList(Model.Managers, "Id", "Name"))" class="form-control">
                        <option value="">Selecione</option>
                      </select>
                    </label>

                    <label>
                      A partir de:
                      <input type="date" name="dtInicial" id="dtInicial" class="form-control">
                    </label>

                    <label>
                      Retroativo a:
                      <input type="date" name="dtFinal" id="dtFinal" class="form-control">
                    </label>

                    <button type="submit" class="btn btn-primary"><i class="fa fa-send-o"></i></button>
                  </form>
                </div>
              </div>
            </div>
            <div class="text-right">
              <label id="sum"></label>
            </div>
            <div id="exportExcel">
              <table id="example" class="table table-responsive-sm table-bordered  table-sm">
                <thead>
                  <tr>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.TypePricing)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.Client_Id)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.Allocation)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.AccountExecutive_Id)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.NumberProposal)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.AllocationManager_Id)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.Administrator_Id)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.InitialDate)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.EndDate)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.TimeBetweenInitialAndEndDate)
                    </th>
                    <th>
                      @Html.DisplayNameFor(model => model.Pricing.Risk)
                    </th>
                    <th>
                      Ações
                    </th>
                  </tr>
                </thead>
                <tbody id="tbodyHour">
                  @foreach (var item in Model.ListPricing)
                  {
                    <tr>
                      <td>
                        @Html.DisplayFor(modelItem => item.TypesPricing)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.Cliente)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.Allocation)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.AccountExecutive)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.NumberProposal)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.AllocationManager)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.Administrator)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.InitialDate)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.EndDate)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.TimeBetweenInitialAndEndDate)
                      </td>
                      <td>
                        @Html.DisplayFor(modelItem => item.Risk)
                      </td>
                      <td>
                        <div class="row ml-0">
                          <button type="button" class="btn btn-ghost-warning" asp-route-id="@item.Id" onclick="Modal(`/Pricings/Details/@item.Id`, 'GET')"><i class="fa fa-search"></i></button>
                          <button type="button" class="btn btn-ghost-primary" asp-route-id="@item.Id" onclick="Modal(`/Pricings/Edit/@item.Id`, 'GET')"><i class="fa fa-edit"></i></button>
                          <button type="button" class="btn btn-ghost-danger" asp-route-id="@item.Id" onclick="fn_showMessageDelete(@item.Id);"><i class="fa fa-trash-o"></i></button>
                        </div>
                      </td>
                    </tr>
                  }
                </tbody>
              </table>
            </div>
          </div>
        </div>
      </div>
      <!--/.col-->
    </div>
    <!--/.row-->
  </div>
</div>

<input type="hidden" name="tipoPrecificacaoInput" id="tipoPrecificacaoInput" value="@ViewBag.tipoPrecificacao">
<input type="hidden" name="clientsInput" id="clientsInput" value="@ViewBag.clients">
<input type="hidden" name="executivoContaInput" id="executivoContaInput" value="@ViewBag.executivoConta">
<input type="hidden" name="alocacaoGerenteInput" id="alocacaoGerenteInput" value="@ViewBag.alocacaoGerente">
<input type="hidden" name="responsavelInput" id="responsavelInput" value="@ViewBag.responsavel">
<input type="hidden" name="dtInicialInput" id="dtInicialInput" value="@ViewBag.dtInicial">
<input type="hidden" name="dtFinalInput" id="dtFinalInput" value="@ViewBag.dtFinal">

<script src="~/js/Pricing/Index.js?@DateTime.Now.ToString()"></script>